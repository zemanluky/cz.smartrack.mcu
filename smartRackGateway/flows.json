[
    {
        "id": "43834154bebbd4ee",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "494605727c010365",
        "type": "mqtt in",
        "z": "43834154bebbd4ee",
        "name": "",
        "topic": "shelf/device123/stock",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a632c81eab1f29d5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 260,
        "wires": [
            [
                "a4ecc517374aa13a"
            ]
        ]
    },
    {
        "id": "11fb1e8feb709678",
        "type": "http request",
        "z": "43834154bebbd4ee",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.smartrack.zeluk.dev/iot/shelf-device/config",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 950,
        "y": 440,
        "wires": [
            [
                "a4f792560c4baa64",
                "fc6f6c15c4e98503"
            ]
        ]
    },
    {
        "id": "3a0dd64bb5333c34",
        "type": "mqtt in",
        "z": "43834154bebbd4ee",
        "name": "",
        "topic": "shelf/signin",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a632c81eab1f29d5",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 80,
        "wires": [
            [
                "71970dae26bd44c8"
            ]
        ]
    },
    {
        "id": "92d6d66b0aad652a",
        "type": "http request",
        "z": "43834154bebbd4ee",
        "name": "POST iot/shelf-device/",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.smartrack.zeluk.dev/iot/shelf-device/",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 980,
        "y": 80,
        "wires": [
            [
                "bd7e1148f23ad729"
            ]
        ]
    },
    {
        "id": "9da5b0c8b34a99c5",
        "type": "mqtt out",
        "z": "43834154bebbd4ee",
        "name": "",
        "topic": "shelf/device123/price",
        "qos": "",
        "retain": "true",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a632c81eab1f29d5",
        "x": 1360,
        "y": 440,
        "wires": []
    },
    {
        "id": "9e141efb62e06e7e",
        "type": "ui_chart",
        "z": "43834154bebbd4ee",
        "name": "",
        "group": "cd9a43f46048d633",
        "order": 2,
        "width": "4",
        "height": "6",
        "label": "Stock 1",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 760,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "33ba2fd4b819a5e2",
        "type": "ui_chart",
        "z": "43834154bebbd4ee",
        "name": "",
        "group": "cd9a43f46048d633",
        "order": 1,
        "width": "4",
        "height": "6",
        "label": "Stock 2",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 760,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "afdea48460e7c1c2",
        "type": "ui_chart",
        "z": "43834154bebbd4ee",
        "name": "",
        "group": "cd9a43f46048d633",
        "order": 0,
        "width": "4",
        "height": "6",
        "label": "Battery",
        "chartType": "bar",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 760,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "6bbffb76433acbad",
        "type": "function",
        "z": "43834154bebbd4ee",
        "name": "function 1",
        "func": "// Assuming msg.payload is the JSON object\n\nvar distance1 = msg.payload.distance1;\nvar distance2 = msg.payload.distance2;\nvar battery = msg.payload.battery;\n\n// Set up three different outputs\nvar output = [null, null, null];\n\n// Set values for each output\noutput[0] = { payload: distance1 };  // Output 1: voltage\noutput[1] = { payload: distance2 };  // Output 2: percentage\noutput[2] = { payload: battery };  // Output 3: status\n\n// Return multiple messages to the respective outputs\nreturn output;\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 720,
        "wires": [
            [
                "9e141efb62e06e7e"
            ],
            [
                "33ba2fd4b819a5e2"
            ],
            [
                "afdea48460e7c1c2"
            ]
        ]
    },
    {
        "id": "df9c083424026fd7",
        "type": "http request",
        "z": "43834154bebbd4ee",
        "d": true,
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 950,
        "y": 260,
        "wires": [
            [
                "2277a8ab6df7427a"
            ]
        ]
    },
    {
        "id": "014eb82469f5157f",
        "type": "inject",
        "z": "43834154bebbd4ee",
        "name": "",
        "props": [],
        "repeat": "43200",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 440,
        "wires": [
            [
                "5239d015de6918d2"
            ]
        ]
    },
    {
        "id": "71970dae26bd44c8",
        "type": "function",
        "z": "43834154bebbd4ee",
        "name": "JWT check",
        "func": "const token = flow.get(\"jwt_token\");\nconst expiry = flow.get(\"jwt_expiry\") || 0;\nconst now = Date.now();\n\nif (!token || now >= expiry - 10000) {\n    // Token missing or about to expire in 10s\n    msg._originalPayload = msg.payload\n    delete msg.payload\n    msg.payload = {\"serial_number\": \"device123\",\"device_secret\": \"vQPIO76F6JVS4SghDUecKr1Sfk1Nk49Q\"}\n    msg.loginRequired = true;\n    return [msg, null];\n}\n\nmsg.headers = {\n    Authorization: `Bearer ${token}`\n};\nreturn [null, msg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 80,
        "wires": [
            [
                "8d6f45741a82fedb"
            ],
            [
                "92d6d66b0aad652a"
            ]
        ]
    },
    {
        "id": "8d6f45741a82fedb",
        "type": "http request",
        "z": "43834154bebbd4ee",
        "name": "POST auth/device-login",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.smartrack.zeluk.dev/auth/device-login",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 570,
        "y": 40,
        "wires": [
            [
                "52c164db493940fb"
            ]
        ]
    },
    {
        "id": "52c164db493940fb",
        "type": "function",
        "z": "43834154bebbd4ee",
        "name": "New JWT",
        "func": "const now = Date.now();\nconst token = msg.payload.access;\nconst expiry = now + 180000;\n\nflow.set(\"jwt_token\", token);\nflow.set(\"jwt_expiry\", expiry);\n\ndelete msg.payload\n\nmsg.payload = msg._originalPayload\n\nmsg.headers = {\n    Authorization: `Bearer ${token}`\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 40,
        "wires": [
            [
                "92d6d66b0aad652a"
            ]
        ]
    },
    {
        "id": "bd7e1148f23ad729",
        "type": "debug",
        "z": "43834154bebbd4ee",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 80,
        "wires": []
    },
    {
        "id": "a4ecc517374aa13a",
        "type": "function",
        "z": "43834154bebbd4ee",
        "name": "JWT check",
        "func": "const token = flow.get(\"jwt_token\");\nconst expiry = flow.get(\"jwt_expiry\") || 0;\nconst now = Date.now();\n\nif (!token || now >= expiry - 10000) {\n    // Token missing or about to expire in 10s\n    msg._originalPayload = msg.payload\n    delete msg.payload\n    msg.payload = {\"serial_number\": \"device123\",\"device_secret\": \"vQPIO76F6JVS4SghDUecKr1Sfk1Nk49Q\"}\n    msg.loginRequired = true;\n    return [msg, null];\n}\n\nmsg.url = \"https://api.smartrack.zeluk.dev/iot/\"+msg.topic.split('/')[1]+\"/status\"\nmsg.headers = {\n    Authorization: `Bearer ${token}`\n};\nreturn [null, msg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 260,
        "wires": [
            [
                "07ec7f21985ad1c9"
            ],
            [
                "df9c083424026fd7"
            ]
        ]
    },
    {
        "id": "07ec7f21985ad1c9",
        "type": "http request",
        "z": "43834154bebbd4ee",
        "name": "POST auth/device-login",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.smartrack.zeluk.dev/auth/device-login",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 570,
        "y": 220,
        "wires": [
            [
                "94751c1e21e77c58"
            ]
        ]
    },
    {
        "id": "94751c1e21e77c58",
        "type": "function",
        "z": "43834154bebbd4ee",
        "name": "New JWT",
        "func": "const now = Date.now();\nconst token = msg.payload.access;\nconst expiry = now + 180000;\n\nflow.set(\"jwt_token\", token);\nflow.set(\"jwt_expiry\", expiry);\n\ndelete msg.payload\n\nmsg.url = \"https://api.smartrack.zeluk.dev/iot/\" + msg.topic.split('/')[1] + \"/status\"\n\nmsg.payload = msg._originalPayload\n\n\nmsg.headers = {\n    Authorization: `Bearer ${token}`\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 220,
        "wires": [
            [
                "df9c083424026fd7"
            ]
        ]
    },
    {
        "id": "2277a8ab6df7427a",
        "type": "debug",
        "z": "43834154bebbd4ee",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 260,
        "wires": []
    },
    {
        "id": "5239d015de6918d2",
        "type": "function",
        "z": "43834154bebbd4ee",
        "name": "JWT check",
        "func": "const token = flow.get(\"jwt_token\");\nconst expiry = flow.get(\"jwt_expiry\") || 0;\nconst now = Date.now();\n\nif (!token || now >= expiry - 10000) {\n    // Token missing or about to expire in 10s\n    msg._originalPayload = msg.payload\n    delete msg.payload\n    msg.payload = {\"serial_number\": \"device123\",\"device_secret\": \"vQPIO76F6JVS4SghDUecKr1Sfk1Nk49Q\"}\n    msg.loginRequired = true;\n    return [msg, null];\n}\n\nmsg.headers = {\n    Authorization: `Bearer ${token}`\n};\nreturn [null, msg];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 440,
        "wires": [
            [
                "f8b0fa938775d410"
            ],
            [
                "11fb1e8feb709678"
            ]
        ]
    },
    {
        "id": "f8b0fa938775d410",
        "type": "http request",
        "z": "43834154bebbd4ee",
        "name": "POST auth/device-login",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.smartrack.zeluk.dev/auth/device-login",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 570,
        "y": 400,
        "wires": [
            [
                "db9b6081ddaad80f"
            ]
        ]
    },
    {
        "id": "db9b6081ddaad80f",
        "type": "function",
        "z": "43834154bebbd4ee",
        "name": "New JWT",
        "func": "const now = Date.now();\nconst token = msg.payload.access;\nconst expiry = now + 180000;\n\nflow.set(\"jwt_token\", token);\nflow.set(\"jwt_expiry\", expiry);\n\ndelete msg.payload\n\nmsg.payload = msg._originalPayload\n\nmsg.headers = {\n    Authorization: `Bearer ${token}`\n};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 400,
        "wires": [
            [
                "11fb1e8feb709678"
            ]
        ]
    },
    {
        "id": "a4f792560c4baa64",
        "type": "debug",
        "z": "43834154bebbd4ee",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1140,
        "y": 500,
        "wires": []
    },
    {
        "id": "fc6f6c15c4e98503",
        "type": "function",
        "z": "43834154bebbd4ee",
        "name": "function 2",
        "func": "const devices = msg.payload;\nconst msgs = [];\n\nfor (const device of devices){\n    msgs.push({\n        topic: \"shelf/\"+ device.SERIALNUM + \"price\",\n        payload: {\n            price: device.PRICE,\n            pairingCode: device.pCODE || null,\n        }\n    })\n}\nreturn [msgs];",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 440,
        "wires": [
            [
                "c7a95a024f6169a7",
                "9da5b0c8b34a99c5"
            ]
        ]
    },
    {
        "id": "c7a95a024f6169a7",
        "type": "debug",
        "z": "43834154bebbd4ee",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 500,
        "wires": []
    },
    {
        "id": "a632c81eab1f29d5",
        "type": "mqtt-broker",
        "name": "Broker",
        "broker": "localhost",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "cd9a43f46048d633",
        "type": "ui_group",
        "name": "Default",
        "tab": "42bfa5545d3307eb",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "42bfa5545d3307eb",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]